!function($){"use strict";$.tablesorter.addParser({id:"inputs",is:function(){return!1},format:function(txt,table,cell){var $input=$(cell).find("input");return $input.length?$input.val():txt},parsed:!0,type:"text"}),$.tablesorter.addParser({id:"inputs-numeric",is:function(){return!1},format:function(txt,table,cell){var $input=$(cell).find("input"),val=$input.length?$input.val():txt,num=$.tablesorter.formatFloat((val||"").replace(/[^\w,. \-()]/g,""),table);return txt&&"number"==typeof num?num:txt?$.trim(txt&&table.config.ignoreCase?txt.toLocaleLowerCase():txt):txt},parsed:!0,type:"numeric"}),$.tablesorter.addParser({id:"checkbox",is:function(){return!1},format:function(txt,table,cell){var $cell=$(cell),wo=table.config.widgetOptions,status=wo.group_checkbox?wo.group_checkbox:["checked","unchecked"],$input=$cell.find('input[type="checkbox"]'),isChecked=$input.length?$input[0].checked:"";return $input.length?status[isChecked?0:1]:txt},parsed:!0,type:"text"}),$.tablesorter.addParser({id:"radio",is:function(){return!1},format:function(txt,table,cell){var $input=$(cell).find("input:checked");return $input.length?$input.val():txt},parsed:!0,type:"text"}),$.tablesorter.addParser({id:"select",is:function(){return!1},format:function(txt,table,cell){var $select=$(cell).find("select");return $select.length?$select.val():txt},parsed:!0,type:"text"}),$.tablesorter.addParser({id:"select-text",is:function(){return!1},format:function(txt,table,cell){var $select=$(cell).find("select");return $select.length?$select.find("option:selected").text()||"":txt},parsed:!0,type:"text"}),$.tablesorter.addParser({id:"textarea",is:function(){return!1},format:function(txt,table,cell){var $textarea=$(cell).find("textarea");return $textarea.length?$textarea.val():txt},parsed:!0,type:"text"}),$.tablesorter.defaults.checkboxClass="",$.tablesorter.defaults.checkboxVisible="",$(function(){if($.fn.on){var toggleRowClass=function($row,checkboxClass,indx,isChecked){$row.toggleClass(checkboxClass+"-"+indx,isChecked),($row[0].className||"").match(checkboxClass+"-")?$row.addClass(checkboxClass):$row.removeClass(checkboxClass)},updateCheckbox=function($el,state){if("INPUT"!==$el[0].nodeName&&($el=$el.find('input[type="checkbox"]')),$el.length){var ua=window.navigator.userAgent;"indeterminate"===state?($el.prop("checked",!(-1<ua.indexOf("Trident/")||-1<ua.indexOf("Edge/"))),$el.prop("indeterminate",!0)):($el.prop("checked",state),$el.prop("indeterminate",!1))}},updateHeaderCheckbox=function($table,checkboxClass){var $rows=$table.children("tbody").children(":visible"),len=$rows.length,hasSticky=$table[0].config.widgetOptions.$sticky;$table.children("thead").find('input[type="checkbox"]').each(function(){var column=$(this).closest("td, th").attr("data-column"),$sticky=hasSticky.find('[data-column="'+column+'"]'),vis=$rows.filter("."+checkboxClass+"-"+column).length,allChecked=vis===len&&0<len;0===vis||allChecked?(updateCheckbox($(this),allChecked),$sticky&&updateCheckbox($sticky,allChecked)):(updateCheckbox($(this),"indeterminate"),$sticky&&updateCheckbox($sticky,"indeterminate"))})};$("table").on("tablesorter-initialized updateComplete",function(){this.tablesorterBusy=!1;var namespace=".parser-forms";$(this).addClass(this.config.namespace.slice(1)).children("tbody").off(namespace).on("mouseleave"+namespace,function(event){"TBODY"===event.target.nodeName&&$(":focus").blur()}).on("focus"+namespace,"select, input:not([type=checkbox]), textarea",function(event){var $row=$(event.target).closest("tr"),c=$row.closest("table")[0].config;!c||c&&c.ignoreChildRow&&$row.hasClass(c.cssChildRow)||$(this).data("ts-original-value",this.value)}).on("blur"+namespace,"input:not([type=checkbox]), textarea",function(event){var $row=$(event.target).closest("tr"),c=$row.closest("table")[0].config;!c||c&&c.ignoreChildRow&&$row.hasClass(c.cssChildRow)||(this.value=$(this).data("ts-original-value"))}).on("change keyup ".split(" ").join(namespace+" "),"select, input, textarea",function(event){var $row=$(this).closest("tr"),c=$row.closest("table")[0].config;if(c&&!(c&&c.ignoreChildRow&&$row.hasClass(c.cssChildRow)))if(27!==event.which||"INPUT"===this.nodeName&&"checkbox"===this.type){if("change"===event.type||"keyup"===event.type&&13===event.which&&("INPUT"===event.target.nodeName||"TEXTAREA"===event.target.nodeName&&event.altKey)){var checkboxClass,$target=$(event.target),isCheckbox="checkbox"===event.target.type,$cell=$target.closest("td"),indx=$cell[0].cellIndex,busy=c.table.tablesorterBusy,$hdr=c.$headerIndexed&&c.$headerIndexed[indx]||[],val=isCheckbox?event.target.checked:$target.val();if($.isEmptyObject(c)||!1!==busy)return;if(isCheckbox&&(checkboxClass=c.checkboxClass||"checked",toggleRowClass($cell.closest("tr"),checkboxClass,indx,val),updateHeaderCheckbox(c.$table,checkboxClass)),$hdr.length&&($hdr.hasClass("parser-false")||$hdr.hasClass("sorter-false")&&$hdr.hasClass("filter-false"))||"change"===event.type&&c.table.isUpdating)return;(c&&val!==$target.data("ts-original-value")||isCheckbox)&&($target.data("ts-original-value",val),c.table.tablesorterBusy=!0,$.tablesorter.updateCell(c,$cell,void 0,function(){c.$table,c.table.tablesorterBusy=!1}))}}else this.value=$(this).data("ts-original-value")}),$(this).children("thead").find('input[type="checkbox"]')&&$(this).off(namespace).on("tablesorter-ready"+namespace,function(){var checkboxClass,$table=$(this),c=$table.length&&$table[0].config;$.isEmptyObject(c)||(this.tablesorterBusy=!0,checkboxClass=c&&c.checkboxClass||"checked",updateHeaderCheckbox($table,checkboxClass),this.tablesorterBusy=!1)}).children("thead").add(this.config.widgetOptions.$sticky).off(namespace).on("click.parser-forms change"+namespace,'input[type="checkbox"]',function(event){var c,onlyVisible,column,$target,isParsed,checkboxClass,$checkbox=$(this),isChecked=this.checked,$table=$checkbox.closest("table"),isSticky=$table.length&&$table[0].className.match(/(tablesorter\w+)_extra_table/);return isSticky&&(isSticky=isSticky[1],$table=$("."+isSticky+":not(."+isSticky+"_extra_table)")),c=$table.length&&$table[0].config,!(!$table.length||!c||$table[0].tablesorterBusy)&&(column=parseInt($checkbox.closest("td, th").attr("data-column"),10),isParsed="checkbox"===c.parsers[column].id,onlyVisible=c.checkboxVisible,$table[0].tablesorterBusy=!0,updateCheckbox($target=$table.children("tbody").children("tr"+(void 0===onlyVisible||!0===onlyVisible?":visible":"")).children(":nth-child("+(column+1)+")"),isChecked),checkboxClass=c.checkboxClass||"checked",$target.each(function(){toggleRowClass($(this).closest("tr"),checkboxClass,column,isChecked)}),isSticky?updateCheckbox($table.children("thead").find('[data-column="'+column+'"]'),isChecked):c.widgetOptions.$sticky&&updateCheckbox(c.widgetOptions.$sticky.find("thead").find('[data-column="'+column+'"]'),isChecked),updateHeaderCheckbox($table,checkboxClass),isParsed?$.tablesorter.update(c,void 0,function(){$table[0].tablesorterBusy=!1}):$table[0].tablesorterBusy=!1,!0)})})}})}(jQuery);